rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"hasNFLInfo(inventory_id, {'all_nfl', 'NULL', 'NULL'}, {class1, landuse, subuse, non_veg})",NA,Translate only rows where landtype has an nfl value. Note that none of these rows have valid species codes., TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,false(|UNKNOWN_VALUE),nothingText(),Attribute does not occur,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),"pe_pei01_countOfNotNull(species_1, species_2, species_3, species_4, species_5, non_veg, class1, layer)",Counts number of layers based on the presence of a valid species or NFL value. Custom function decides if NFL layer is present based on rules in NFL table. Identifies if species are present by checking the values against the valid species codes in the lookup table.,TRUE
5,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),Attribute does not occur,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),Attribute does not occur,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
10,NAT_NON_VEG,text,"notNull(non_veg|NOT_APPLICABLE);matchList(non_veg,{'BAR','BSB','SDW','WWW','WAT','SO','SD','WW','FL'}|NOT_APPLICABLE)","mapText(non_veg, {'BAR','BSB','SDW','WWW','WAT','SO','SD','WW','FL'}, {'EXPOSED_LAND','BEACH','SAND','OCEAN','LAKE','SLIDE','SAND','LAKE','FLOOD'})",Maps source value to NAT_NON_VEG using list of values.,TRUE
11,NON_FOR_ANTH,text,"notNull(anth1|NOT_APPLICABLE);matchList(anth1,{'AGR','COM','RES','IND','NON','REC','TRN','URB','INT','CL','WF','PL','RN','RD','RR','AG','EP','UR'}|NOT_APPLICABLE)","mapText(anth1, {'AGR','COM','RES','IND','NON','REC','TRN','URB','INT','CL','WF','PL','RN','RD','RR','AG','EP','UR'}, {'CULTIVATED','SETTLEMENT','SETTLEMENT','INDUSTRIAL','OTHER','SETTLEMENT','FACILITY_INFRASTRUCTURE','SETTLEMENT','SETTLEMENT','OTHER','OTHER','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','CULTIVATED','BORROW_PIT','SETTLEMENT'})",Maps source value to NON_FOR_ANTH using list of values.,TRUE
12,NON_FOR_VEG,text,"notNull(forveg|NOT_APPLICABLE);matchList(forveg,{'BOW','BO'}|NOT_APPLICABLE)","mapText(forveg,{'BOW','BO'}, {'OPEN_MUSKEG','OPEN_MUSKEG'})",Maps source value to NON_FOR_VEG using list of values.,TRUE
